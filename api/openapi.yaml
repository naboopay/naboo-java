openapi: 3.1.0
info:
  description: Here you have the first version of the naboo api to create checkout
    automatically
  title: NabooApi V1
  version: 0.1.0
servers:
- url: /api/v1
paths:
  /transaction/create-transaction:
    put:
      description: "This endpoint allows authenticated users to create a transaction\
        \ by submitting a request with the necessary details. The endpoint ensures\
        \ that the user's access level permits transaction creation and enforces a\
        \ rate limit of 30 requests. It checks that the number of products is within\
        \ the allowed range (1-20) and calculates the total transaction amount, applying\
        \ a 20% charge for escrow transactions. It also verifies that the total amount\
        \ does not exceed a specific threshold (2,000,000). The user's IP address\
        \ and browser information are logged, and the transaction details are saved\
        \ with relevant metadata, including a unique order ID and the associated account\
        \ state. If any conditions are not met, appropriate error messages are returned."
      operationId: create_transaction_transaction_create_transaction_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: The request was successful.
        "400":
          description: The request was invalid or malformed.
        "401":
          description: The user is not authorized to make this request.
        "403":
          description: The user does not have permission to access this resource.
        "404":
          description: The requested resource could not be found.
        "500":
          description: An unexpected internal server error occurred.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Transaction
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/delete-transaction:
    delete:
      description: "This endpoint allows authenticated users to delete a transaction\
        \ by submitting a request with the necessary details. The endpoint checks\
        \ the user's access level to ensure they have permission to delete transactions\
        \ and enforces a rate limit of 30 requests. It verifies that the transaction\
        \ belongs to the user and has not already been deleted or withdrawn. If the\
        \ transaction is paid and has a payment reference, it processes refunds and\
        \ updates the user's account balance accordingly."
      operationId: delete_transaction_transaction_delete_transaction_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTransactionResponse'
          description: The request was successful.
        "400":
          description: The request was invalid or malformed.
        "401":
          description: The user is not authorized to make this request.
        "403":
          description: The user does not have permission to access this resource.
        "404":
          description: The requested resource could not be found.
        "500":
          description: An unexpected internal server error occurred.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Transaction
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/get-transactions:
    get:
      description: "This endpoint allows authenticated users to retrieve a list of\
        \ their visible transactions, up to a maximum of 50. The endpoint enforces\
        \ a rate limit of 30 requests and ensures the user has read access."
      operationId: get_transactions_transaction_get_transactions_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllTransaction'
          description: The request was successful.
        "400":
          description: The request was invalid or malformed.
        "401":
          description: The user is not authorized to make this request.
        "403":
          description: The user does not have permission to access this resource.
        "404":
          description: The requested resource could not be found.
        "500":
          description: An unexpected internal server error occurred.
      security:
      - HTTPBearer: []
      summary: Get Transactions
      tags:
      - Transaction
      x-accepts:
      - application/json
  /transaction/get-one-transaction:
    get:
      description: "This endpoint allows authenticated users to retrieve the details\
        \ of a specific transaction using the order ID. The endpoint ensures the user\
        \ has read access and enforces a rate limit of 30 requests. It checks if the\
        \ transaction exists in the database and if the user has the appropriate access\
        \ rights,then provides a checkout URL for the transaction and others informations"
      operationId: get_one_transaction_transaction_get_one_transaction_get
      parameters:
      - explode: true
        in: query
        name: order_id
        required: true
        schema:
          title: Order Id
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOneTransaction'
          description: The request was successful.
        "400":
          description: The request was invalid or malformed.
        "401":
          description: The user is not authorized to make this request.
        "403":
          description: The user does not have permission to access this resource.
        "404":
          description: The requested resource could not be found.
        "500":
          description: An unexpected internal server error occurred.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get One Transaction
      tags:
      - Transaction
      x-accepts:
      - application/json
  /account/:
    get:
      operationId: get_account_information_account__get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountResponse'
          description: The request was successful.
        "400":
          description: The request was invalid or malformed.
        "401":
          description: The user is not authorized to make this request.
        "403":
          description: The user does not have permission to access this resource.
        "404":
          description: The requested resource could not be found.
        "500":
          description: An unexpected internal server error occurred.
      security:
      - HTTPBearer: []
      summary: Get Account Information
      tags:
      - Account
      x-accepts:
      - application/json
  /cashout/wave:
    post:
      description: "This endpoint allows a user to withdraw funds from their NabooPay\
        \ account to their Wave account. The user must be authenticated and not possess\
        \ the 'dev' role. The withdrawal amount must be greater than 10 and not exceed\
        \ the user's account balance. The user's account must exist and be active.\
        \ Upon successful validation, the system updates the user's account balance\
        \ and records the transaction for tracking purposes."
      operationId: cash_out_wave_cashout_wave_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashOutWaveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashOutResponse'
          description: The request was successful.
        "400":
          description: The request was invalid or malformed.
        "401":
          description: The user is not authorized to make this request.
        "403":
          description: The user does not have permission to access this resource.
        "404":
          description: The requested resource could not be found.
        "500":
          description: An unexpected internal server error occurred.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Cash Out Wave
      tags:
      - Cashout
      x-content-type: application/json
      x-accepts:
      - application/json
  /cashout/orange-money:
    post:
      description: "This endpoint enables a user to withdraw funds from their NabooPay\
        \ account to their Orange Money account. Authentication is required, and users\
        \ with the 'dev' role are not permitted to perform this operation. The amount\
        \ to be withdrawn must be positive and within the user's available balance.\
        \ The user's account must be active and registered in the system. After validation,\
        \ the user's account balance is adjusted accordingly, and the transaction\
        \ is logged for record-keeping."
      operationId: cash_out_orange_money_cashout_orange_money_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashOutOrangeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashOutResponse'
          description: The request was successful.
        "400":
          description: The request was invalid or malformed.
        "401":
          description: The user is not authorized to make this request.
        "403":
          description: The user does not have permission to access this resource.
        "404":
          description: The requested resource could not be found.
        "500":
          description: An unexpected internal server error occurred.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Cash Out Orange Money
      tags:
      - Cashout
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    CashOutOrangeRequest:
      example:
        amount: 0
        full_name: full_name
        phone_number: phone_number
      properties:
        full_name:
          title: Full Name
          type: string
        amount:
          title: Amount
          type: integer
        phone_number:
          title: Phone Number
          type: string
      required:
      - amount
      - full_name
      - phone_number
      title: CashOutOrangeRequest
    CashOutResponse:
      example:
        amount: 0
        full_name: full_name
        phone_number: phone_number
        status: pending
      properties:
        phone_number:
          title: Phone Number
          type: string
        amount:
          title: Amount
          type: integer
        full_name:
          title: Full Name
          type: string
        status:
          $ref: '#/components/schemas/TransactionStatusEnum'
      required:
      - amount
      - full_name
      - phone_number
      - status
      title: CashOutResponse
    CashOutWaveRequest:
      example:
        amount: 0
        full_name: full_name
        phone_number: phone_number
      properties:
        full_name:
          title: Full Name
          type: string
        amount:
          title: Amount
          type: integer
        phone_number:
          title: Phone Number
          type: string
      required:
      - amount
      - full_name
      - phone_number
      title: CashOutWaveRequest
    DeleteTransactionRequest:
      example:
        order_id: order_id
      properties:
        order_id:
          title: Order Id
          type: string
      required:
      - order_id
      title: DeleteTransactionRequest
    DeleteTransactionResponse:
      example:
        message: message
        order_id: order_id
      properties:
        order_id:
          title: Order Id
          type: string
        message:
          title: Message
          type: string
      required:
      - message
      - order_id
      title: DeleteTransactionResponse
    GetAccountResponse:
      example:
        account_number: account_number
        account_is_activate: true
        loyalty_credit: 6
        balance: 0.8008281904610115
        method_of_payment: WAVE
      properties:
        account_number:
          title: Account Number
          type: string
        balance:
          title: Balance
          type: number
        account_is_activate:
          title: Account Is Activate
          type: boolean
        method_of_payment:
          $ref: '#/components/schemas/Wallet'
        loyalty_credit:
          title: Loyalty Credit
          type: integer
      required:
      - account_is_activate
      - account_number
      - balance
      - loyalty_credit
      - method_of_payment
      title: GetAccountResponse
    GetAllTransaction:
      example:
        transactions:
        - amount: 0
          transaction_status: pending
          is_done: true
          checkout_url: checkout_url
          amount_to_pay: 6
          created_at: created_at
          currency: currency
          method_of_payment:
          - WAVE
          - WAVE
          order_id: order_id
          products:
          - amount: 0
            quantity: 6
            name: name
            description: description
            category: category
          - amount: 0
            quantity: 6
            name: name
            description: description
            category: category
          is_escrow: true
          is_merchant: true
        - amount: 0
          transaction_status: pending
          is_done: true
          checkout_url: checkout_url
          amount_to_pay: 6
          created_at: created_at
          currency: currency
          method_of_payment:
          - WAVE
          - WAVE
          order_id: order_id
          products:
          - amount: 0
            quantity: 6
            name: name
            description: description
            category: category
          - amount: 0
            quantity: 6
            name: name
            description: description
            category: category
          is_escrow: true
          is_merchant: true
      properties:
        transactions:
          items:
            $ref: '#/components/schemas/GetOneTransaction'
          type: array
      required:
      - transactions
      title: GetAllTransaction
    GetOneTransaction:
      example:
        amount: 0
        transaction_status: pending
        is_done: true
        checkout_url: checkout_url
        amount_to_pay: 6
        created_at: created_at
        currency: currency
        method_of_payment:
        - WAVE
        - WAVE
        order_id: order_id
        products:
        - amount: 0
          quantity: 6
          name: name
          description: description
          category: category
        - amount: 0
          quantity: 6
          name: name
          description: description
          category: category
        is_escrow: true
        is_merchant: true
      properties:
        order_id:
          title: Order Id
          type: string
        method_of_payment:
          items:
            $ref: '#/components/schemas/Wallet'
          type: array
        amount:
          title: Amount
          type: integer
        amount_to_pay:
          title: Amount To Pay
          type: integer
        currency:
          title: Currency
          type: string
        created_at:
          title: Created At
          type: string
        transaction_status:
          $ref: '#/components/schemas/TransactionStatusEnum'
        products:
          items:
            $ref: '#/components/schemas/ProductModel'
          nullable: true
          type: array
        is_done:
          title: Is Done
          type: boolean
        is_escrow:
          title: Is Escrow
          type: boolean
        is_merchant:
          title: Is Merchant
          type: boolean
        checkout_url:
          title: Checkout Url
          type: string
      required:
      - amount
      - amount_to_pay
      - checkout_url
      - created_at
      - currency
      - is_done
      - is_escrow
      - is_merchant
      - method_of_payment
      - order_id
      - products
      - transaction_status
      title: GetOneTransaction
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    ProductModel:
      example:
        amount: 0
        quantity: 6
        name: name
        description: description
        category: category
      properties:
        name:
          title: Name
          type: string
        category:
          title: Category
          type: string
        amount:
          title: Amount
          type: integer
        quantity:
          title: Quantity
          type: integer
        description:
          title: Description
          type: string
      required:
      - amount
      - category
      - description
      - name
      - quantity
      title: ProductModel
    TransactionRequest:
      example:
        error_url: error_url
        method_of_payment:
        - WAVE
        - WAVE
        products:
        - amount: 0
          quantity: 6
          name: name
          description: description
          category: category
        - amount: 0
          quantity: 6
          name: name
          description: description
          category: category
        success_url: success_url
        is_escrow: false
        is_merchant: false
      properties:
        method_of_payment:
          items:
            $ref: '#/components/schemas/Wallet'
          type: array
        products:
          items:
            $ref: '#/components/schemas/ProductModel'
          nullable: true
          type: array
        success_url:
          nullable: true
          pattern: "^https:\\/\\/[^\\s]+$"
          type: string
        error_url:
          nullable: true
          pattern: "^https:\\/\\/[^\\s]+$"
          type: string
        is_escrow:
          default: false
          title: Is Escrow
          type: boolean
        is_merchant:
          default: false
          title: Is Merchant
          type: boolean
      required:
      - method_of_payment
      - products
      title: TransactionRequest
    TransactionResponse:
      example:
        amount: 0
        transaction_status: pending
        checkout_url: checkout_url
        amount_to_pay: 6
        created_at: created_at
        currency: currency
        method_of_payment:
        - method_of_payment
        - method_of_payment
        order_id: order_id
        is_escrow: false
        is_merchant: false
      properties:
        order_id:
          title: Order Id
          type: string
        method_of_payment:
          items:
            type: string
          type: array
        amount:
          default: 0
          title: Amount
          type: integer
        amount_to_pay:
          default: 0
          title: Amount To Pay
          type: integer
        currency:
          title: Currency
          type: string
        created_at:
          title: Created At
          type: string
        transaction_status:
          default: pending
          title: Transaction Status
          type: string
        is_escrow:
          default: false
          title: Is Escrow
          type: boolean
        is_merchant:
          default: false
          title: Is Merchant
          type: boolean
        checkout_url:
          title: Checkout Url
          type: string
      required:
      - checkout_url
      - created_at
      - currency
      - method_of_payment
      - order_id
      title: TransactionResponse
    TransactionStatusEnum:
      enum:
      - pending
      - paid
      - done
      - part_paid
      title: TransactionStatusEnum
      type: string
    ValidationError:
      example:
        msg: msg
        loc:
        - ValidationError_loc_inner
        - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    Wallet:
      enum:
      - WAVE
      - ORANGE_MONEY
      - FREE_MONEY
      title: Wallet
      type: string
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http

